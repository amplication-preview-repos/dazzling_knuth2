/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  RechargeIntegration as PrismaRechargeIntegration,
} from "@prisma/client";

export class RechargeIntegrationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RechargeIntegrationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.rechargeIntegration.count(args);
  }

  async rechargeIntegrations(
    args: Prisma.RechargeIntegrationFindManyArgs
  ): Promise<PrismaRechargeIntegration[]> {
    return this.prisma.rechargeIntegration.findMany(args);
  }
  async rechargeIntegration(
    args: Prisma.RechargeIntegrationFindUniqueArgs
  ): Promise<PrismaRechargeIntegration | null> {
    return this.prisma.rechargeIntegration.findUnique(args);
  }
  async createRechargeIntegration(
    args: Prisma.RechargeIntegrationCreateArgs
  ): Promise<PrismaRechargeIntegration> {
    return this.prisma.rechargeIntegration.create(args);
  }
  async updateRechargeIntegration(
    args: Prisma.RechargeIntegrationUpdateArgs
  ): Promise<PrismaRechargeIntegration> {
    return this.prisma.rechargeIntegration.update(args);
  }
  async deleteRechargeIntegration(
    args: Prisma.RechargeIntegrationDeleteArgs
  ): Promise<PrismaRechargeIntegration> {
    return this.prisma.rechargeIntegration.delete(args);
  }
}
